package qdt.hcmute.vn.dqtbook_backend.config;

import jakarta.servlet.http.HttpSession;
import org.springframework.http.server.ServerHttpRequest;
import org.springframework.http.server.ServerHttpResponse;
import org.springframework.http.server.ServletServerHttpRequest;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.server.HandshakeInterceptor;

import java.util.Map;

/**
 * Interceptor Ä‘á»ƒ láº¥y thÃ´ng tin user tá»« HTTP session khi handshake WebSocket
 */
public class HttpSessionHandshakeInterceptor implements HandshakeInterceptor {

    @Override
    public boolean beforeHandshake(ServerHttpRequest request, 
                                   ServerHttpResponse response,
                                   WebSocketHandler wsHandler, 
                                   Map<String, Object> attributes) throws Exception {
        
        if (request instanceof ServletServerHttpRequest) {
            ServletServerHttpRequest servletRequest = (ServletServerHttpRequest) request;
            HttpSession session = servletRequest.getServletRequest().getSession(false);
            
            if (session != null) {
                // Láº¥y userId tá»« HTTP session
                Object userId = session.getAttribute("userId");
                
                if (userId != null) {
                    // LÆ°u userId vÃ o WebSocket session attributes
                    attributes.put("userId", userId);
                    System.out.println("âœ… WebSocket handshake: userId=" + userId);
                    return true; // Cho phÃ©p káº¿t ná»‘i
                }
            }
            
            System.out.println("ðŸš« WebSocket handshake rejected: No valid session");
            return false; // Tá»« chá»‘i káº¿t ná»‘i náº¿u khÃ´ng cÃ³ session
        }
        
        return false;
    }

    @Override
    public void afterHandshake(ServerHttpRequest request, 
                              ServerHttpResponse response,
                              WebSocketHandler wsHandler, 
                              Exception exception) {
        // CÃ³ thá»ƒ log hoáº·c xá»­ lÃ½ sau khi handshake
    }
}
